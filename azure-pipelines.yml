trigger:
  batch: true
  branches:
   include:
     - main
  paths:
    exclude:
      - '.gitignore'
      - '.vscode/*.*'
      - '*.md'
      - 'LICENSE'

pr:
  drafts: false
  branches:
    include:
      - main
  paths:
    exclude:
      - '.gitignore'
      - '.vscode/*.*'
      - '*.md'
      - 'LICENSE'

pool:
  vmImage: ubuntu-latest

variables:
  node_version: '16.x'
  npm_config_cache: $(Pipeline.Workspace)/.npm
  is_main: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
  generate_source_maps: $[lower(variables['is_main'])] # script step requires lowercase boolean, see https://stackoverflow.com/q/71729210/419956

stages:
  - stage: build
    displayName: Build
    jobs:
    - job: Build
      steps:
        - task: NodeTool@0
          displayName: 'Node installation'
          inputs:
            versionSpec: $(node_version)
        
        - pwsh: Get-ChildItem -Path Env:\
          displayName: 'Show environment variables'
          condition: false # Disabled by default

        - task: Cache@2
          displayName: 'NPM Cache'
          inputs:
            key: 'npm | "$(Agent.OS)" | "$(node_version)" | package-lock.json'
            path: $(npm_config_cache)

        - script: npm cache verify
          displayName: 'NPM Cache verification'

        - script: npm ci
          displayName: 'NPM CI'

        - script: npm run lint
          displayName: 'Angular linting'

        - script: npm run test -- --no-watch --reporters="progress,junit" --code-coverage
          displayName: 'Angular test run'

        - task: PublishTestResults@2
          displayName: 'Angular test result publication'
          inputs:
            testResultsFiles: 'TESTS-*.xml'

        - task: PublishCodeCoverageResults@1
          displayName: 'Angular test coverage publication'
          inputs:
            codeCoverageTool: 'Cobertura'
            summaryFileLocation: '$(Build.SourcesDirectory)/coverage/**/cobertura-coverage.xml'

        - script: npm run build -- --source-map=$(generate_source_maps)
          displayName: 'Angular build'
          
        - publish: '$(Build.SourcesDirectory)/dist/foo'
          displayName: 'Publish Angular application'
          artifact: AngularApp

  - stage: deployment
    displayName: Deployment
    jobs:
    - job: ManualValidation
      displayName: Manual Validation
      pool: server
      timeoutInMinutes: 1440 # 24 hours
      steps:
      - task: ManualValidation@0
        displayName: 'Manual validation'
        inputs:
          instructions: 'Please approve continuation of the pipeline using common sense.'
          notifyUsers: 'sample-angular-azure-devops@jeroenheijmans.nl'
          onTimeout: reject

    - job: Deployment
      dependsOn: ManualValidation
      steps:
      - checkout: none

      - download: current
        displayName: 'Download AngularApp'
        artifact: AngularApp
      
      - powershell: Get-ChildItem *.* -Recurse -Path $(Pipeline.Workspace) | Select UnixMode,Length,FullName
        displayName: 'Show folder contents for debugging'
      
      # TODO: Actual deployment
